apiVersion: v1
binaryData:
  redis.conf: IyBOb3RlIG9uIHVuaXRzOiB3aGVuIG1lbW9yeSBzaXplIGlzIG5lZWRlZCwgaXQgaXMgcG9zc2libGUgdG8gc3BlY2lmaXkNCiMgaXQgaW4gdGhlIHVzdWFsIGZvcm0gb2YgMWsgNUdCIDRNIGFuZCBzbyBmb3J0aDoNCiMNCiMgMWsgPT4gMTAwMCBieXRlcw0KIyAxa2IgPT4gMTAyNCBieXRlcw0KIyAxbSA9PiAxMDAwMDAwIGJ5dGVzDQojIDFtYiA9PiAxMDI0KjEwMjQgYnl0ZXMNCiMgMWcgPT4gMTAwMDAwMDAwMCBieXRlcw0KIyAxZ2IgPT4gMTAyNCoxMDI0KjEwMjQgYnl0ZXMNCiMNCiMgdW5pdHMgYXJlIGNhc2UgaW5zZW5zaXRpdmUgc28gMUdCIDFHYiAxZ0IgYXJlIGFsbCB0aGUgc2FtZS4NCg0KIyBSZWRpc+m7mOiupOS4jeaYr+S7peWuiOaKpOi/m+eoi+eahOaWueW8j+i/kOihjO+8jOWPr+S7pemAmui/h+ivpemFjee9rumhueS/ruaUue+8jOS9v+eUqHllc+WQr+eUqOWuiOaKpOi/m+eoiw0KIyDlkK/nlKjlrojmiqTov5vnqIvlkI7vvIxSZWRpc+S8muaKinBpZOWGmeWIsOS4gOS4qnBpZGZpbGXkuK3vvIzlnKgvdmFyL3J1bi9yZWRpcy5waWQNCmRhZW1vbml6ZSBubw0KDQojIOW9k1JlZGlz5Lul5a6I5oqk6L+b56iL5pa55byP6L+Q6KGM5pe277yMUmVkaXPpu5jorqTkvJrmiopwaWTlhpnlhaUvdmFyL3J1bi9yZWRpcy5waWTmlofku7bvvIzlj6/ku6XpgJrov4dwaWRmaWxl5oyH5a6aDQpwaWRmaWxlIC92YXIvcnVuL3JlZGlzLnBpZA0KDQojIOaMh+WumlJlZGlz55uR5ZCs56uv5Y+j77yM6buY6K6k56uv5Y+j5Li6NjM3OQ0KIyDlpoLmnpzmjIflrpow56uv5Y+j77yM6KGo56S6UmVkaXPkuI3nm5HlkKxUQ1Dov57mjqUNCnBvcnQgNjM3OQ0KDQojIOe7keWumueahOS4u+acuuWcsOWdgA0KIyDkvaDlj6/ku6Xnu5HlrprljZXkuIDmjqXlj6PvvIzlpoLmnpzmsqHmnInnu5HlrprvvIzmiYDmnInmjqXlj6Ppg73kvJrnm5HlkKzliLDmnaXnmoTov57mjqUNCiMgYmluZCAxMjcuMC4wLjENCg0KIyBTcGVjaWZ5IHRoZSBwYXRoIGZvciB0aGUgdW5peCBzb2NrZXQgdGhhdCB3aWxsIGJlIHVzZWQgdG8gbGlzdGVuIGZvcg0KIyBpbmNvbWluZyBjb25uZWN0aW9ucy4gVGhlcmUgaXMgbm8gZGVmYXVsdCwgc28gUmVkaXMgd2lsbCBub3QgbGlzdGVuDQojIG9uIGEgdW5peCBzb2NrZXQgd2hlbiBub3Qgc3BlY2lmaWVkLg0KIw0KIyB1bml4c29ja2V0IC90bXAvcmVkaXMuc29jaw0KIyB1bml4c29ja2V0cGVybSA3NTUNCg0KIyDlvZPlrqLmiLfnq6/pl7Lnva7lpJrplb/ml7bpl7TlkI7lhbPpl63ov57mjqXvvIzlpoLmnpzmjIflrprkuLow77yM6KGo56S65YWz6Zet6K+l5Yqf6IO9DQp0aW1lb3V0IDANCg0KIyDmjIflrprml6Xlv5forrDlvZXnuqfliKvvvIxSZWRpc+aAu+WFseaUr+aMgeWbm+S4que6p+WIq++8mmRlYnVn44CBdmVyYm9zZeOAgW5vdGljZeOAgXdhcm5pbmfvvIzpu5jorqTkuLp2ZXJib3NlDQojIGRlYnVnICjlvojlpJrkv6Hmga8sIOWvueW8gOWPke+8j+a1i+ivleavlOi+g+acieeUqCkNCiMgdmVyYm9zZSAobWFueSByYXJlbHkgdXNlZnVsIGluZm8sIGJ1dCBub3QgYSBtZXNzIGxpa2UgdGhlIGRlYnVnIGxldmVsKQ0KIyBub3RpY2UgKG1vZGVyYXRlbHkgdmVyYm9zZSwgd2hhdCB5b3Ugd2FudCBpbiBwcm9kdWN0aW9uIHByb2JhYmx5KQ0KIyB3YXJuaW5nIChvbmx5IHZlcnkgaW1wb3J0YW50IC8gY3JpdGljYWwgbWVzc2FnZXMgYXJlIGxvZ2dlZCkNCmxvZ2xldmVsIHZlcmJvc2UNCg0KIyDml6Xlv5forrDlvZXmlrnlvI/vvIzpu5jorqTkuLrmoIflh4bovpPlh7rvvIzlpoLmnpzphY3nva7kuLpyZWRpc+S4uuWuiOaKpOi/m+eoi+aWueW8j+i/kOihjO+8jOiAjOi/memHjOWPiOmFjee9ruS4uuagh+WHhui+k+WHuu+8jOWImeaXpeW/l+WwhuS8muWPkemAgee7mS9kZXYvbnVsbA0KbG9nZmlsZSAvbG9ncy9yZWRpcy5sb2cNCg0KIyBUbyBlbmFibGUgbG9nZ2luZyB0byB0aGUgc3lzdGVtIGxvZ2dlciwganVzdCBzZXQgJ3N5c2xvZy1lbmFibGVkJyB0byB5ZXMsDQojIGFuZCBvcHRpb25hbGx5IHVwZGF0ZSB0aGUgb3RoZXIgc3lzbG9nIHBhcmFtZXRlcnMgdG8gc3VpdCB5b3VyIG5lZWRzLg0KIyBzeXNsb2ctZW5hYmxlZCBubw0KDQojIFNwZWNpZnkgdGhlIHN5c2xvZyBpZGVudGl0eS4NCiMgc3lzbG9nLWlkZW50IHJlZGlzDQoNCiMgU3BlY2lmeSB0aGUgc3lzbG9nIGZhY2lsaXR5LiAgTXVzdCBiZSBVU0VSIG9yIGJldHdlZW4gTE9DQUwwLUxPQ0FMNy4NCiMgc3lzbG9nLWZhY2lsaXR5IGxvY2FsMA0KDQojIOiuvue9ruaVsOaNruW6k+eahOaVsOmHj++8jOm7mOiupOaVsOaNruW6k+S4ujDvvIzlj6/ku6Xkvb/nlKhzZWxlY3QgPGRiaWQ+5ZG95Luk5Zyo6L+e5o6l5LiK5oyH5a6a5pWw5o2u5bqTaWQNCiMgZGJpZOaYr+S7jjDliLDigJhkYXRhYmFzZXPigJktMeeahOaVsOebrg0KZGF0YWJhc2VzIDE2DQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIFNOQVBTSE9UVElORyAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojIOaMh+WumuWcqOWkmumVv+aXtumXtOWGhe+8jOacieWkmuWwkeasoeabtOaWsOaTjeS9nO+8jOWwseWwhuaVsOaNruWQjOatpeWIsOaVsOaNruaWh+S7tu+8jOWPr+S7peWkmuS4quadoeS7tumFjeWQiA0KIyBTYXZlIHRoZSBEQiBvbiBkaXNrOg0KIw0KIyAgIHNhdmUgPHNlY29uZHM+IDxjaGFuZ2VzPg0KIw0KIyAgIFdpbGwgc2F2ZSB0aGUgREIgaWYgYm90aCB0aGUgZ2l2ZW4gbnVtYmVyIG9mIHNlY29uZHMgYW5kIHRoZSBnaXZlbg0KIyAgIG51bWJlciBvZiB3cml0ZSBvcGVyYXRpb25zIGFnYWluc3QgdGhlIERCIG9jY3VycmVkLg0KIw0KIyAgIOa7oei2s+S7peS4i+adoeS7tuWwhuS8muWQjOatpeaVsOaNrjoNCiMgICA5MDDnp5LvvIgxNeWIhumSn++8ieWGheaciTHkuKrmm7TmlLkNCiMgICAzMDDnp5LvvIg15YiG6ZKf77yJ5YaF5pyJMTDkuKrmm7TmlLkNCiMgICA2MOenkuWGheaciTEwMDAw5Liq5pu05pS5DQojICAgTm90ZTog5Y+v5Lul5oqK5omA5pyJ4oCcc2F2ZeKAneihjOazqOmHiuaOie+8jOi/meagt+WwseWPlua2iOWQjOatpeaTjeS9nOS6hg0KDQpzYXZlIDkwMCAxDQpzYXZlIDMwMCAxMA0Kc2F2ZSA2MCAxMDAwMA0KDQojIOaMh+WumuWtmOWCqOiHs+acrOWcsOaVsOaNruW6k+aXtuaYr+WQpuWOi+e8qeaVsOaNru+8jOm7mOiupOS4unllc++8jFJlZGlz6YeH55SoTFpG5Y6L57yp77yM5aaC5p6c5Li65LqG6IqC55yBQ1BV5pe26Ze077yM5Y+v5Lul5YWz6Zet6K+l6YCJ6aG577yM5L2G5Lya5a+86Ie05pWw5o2u5bqT5paH5Lu25Y+Y55qE5beo5aSnDQpyZGJjb21wcmVzc2lvbiB5ZXMNCg0KIyDmjIflrprmnKzlnLDmlbDmja7lupPmlofku7blkI3vvIzpu5jorqTlgLzkuLpkdW1wLnJkYg0KZGJmaWxlbmFtZSBkdW1wLnJkYg0KDQojIOW3peS9nOebruW9lS4NCiMg5oyH5a6a5pys5Zyw5pWw5o2u5bqT5a2Y5pS+55uu5b2V77yM5paH5Lu25ZCN55Sx5LiK5LiA5LiqZGJmaWxlbmFtZemFjee9rumhueaMh+Wumg0KIw0KIyBBbHNvIHRoZSBBcHBlbmQgT25seSBGaWxlIHdpbGwgYmUgY3JlYXRlZCBpbnNpZGUgdGhpcyBkaXJlY3RvcnkuDQojDQojIOazqOaEj++8jOi/memHjOWPquiDveaMh+WumuS4gOS4quebruW9le+8jOS4jeiDveaMh+WumuaWh+S7tuWQjQ0KZGlyIC4vDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBSRVBMSUNBVElPTiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KIyDkuLvku47lpI3liLbjgILkvb/nlKhzbGF2ZW9m5LuOIFJlZGlz5pyN5Yqh5Zmo5aSN5Yi25LiA5LiqUmVkaXPlrp7kvovjgILms6jmhI/vvIzor6XphY3nva7ku4XpmZDkuo7lvZPliY1zbGF2ZeacieaViA0KIyBzbyBmb3IgZXhhbXBsZSBpdCBpcyBwb3NzaWJsZSB0byBjb25maWd1cmUgdGhlIHNsYXZlIHRvIHNhdmUgdGhlIERCIHdpdGggYQ0KIyBkaWZmZXJlbnQgaW50ZXJ2YWwsIG9yIHRvIGxpc3RlbiB0byBhbm90aGVyIHBvcnQsIGFuZCBzbyBvbi4NCiMg6K6+572u5b2T5pys5py65Li6c2xhduacjeWKoeaXtu+8jOiuvue9rm1hc3RlcuacjeWKoeeahGlw5Zyw5Z2A5Y+K56uv5Y+j77yM5ZyoUmVkaXPlkK/liqjml7bvvIzlroPkvJroh6rliqjku45tYXN0ZXLov5vooYzmlbDmja7lkIzmraUNCiMgc2xhdmVvZiA8bWFzdGVyaXA+IDxtYXN0ZXJwb3J0Pg0KDQoNCiMg5b2TbWFzdGVy5pyN5Yqh6K6+572u5LqG5a+G56CB5L+d5oqk5pe277yMc2xhduacjeWKoei/nuaOpW1hc3RlcueahOWvhueggQ0KIyDkuIvmlofnmoTigJxyZXF1aXJlcGFzc+KAnemFjee9rumhueWPr+S7peaMh+WumuWvhueggQ0KIyBtYXN0ZXJhdXRoIDxtYXN0ZXItcGFzc3dvcmQ+DQoNCiMgV2hlbiBhIHNsYXZlIGxvc3QgdGhlIGNvbm5lY3Rpb24gd2l0aCB0aGUgbWFzdGVyLCBvciB3aGVuIHRoZSByZXBsaWNhdGlvbg0KIyBpcyBzdGlsbCBpbiBwcm9ncmVzcywgdGhlIHNsYXZlIGNhbiBhY3QgaW4gdHdvIGRpZmZlcmVudCB3YXlzOg0KIw0KIyAxKSBpZiBzbGF2ZS1zZXJ2ZS1zdGFsZS1kYXRhIGlzIHNldCB0byAneWVzJyAodGhlIGRlZmF1bHQpIHRoZSBzbGF2ZSB3aWxsDQojICAgIHN0aWxsIHJlcGx5IHRvIGNsaWVudCByZXF1ZXN0cywgcG9zc2libHkgd2l0aCBvdXQgb2YgZGF0YSBkYXRhLCBvciB0aGUNCiMgICAgZGF0YSBzZXQgbWF5IGp1c3QgYmUgZW1wdHkgaWYgdGhpcyBpcyB0aGUgZmlyc3Qgc3luY2hyb25pemF0aW9uLg0KIw0KIyAyKSBpZiBzbGF2ZS1zZXJ2ZS1zdGFsZSBkYXRhIGlzIHNldCB0byAnbm8nIHRoZSBzbGF2ZSB3aWxsIHJlcGx5IHdpdGgNCiMgICAgYW4gZXJyb3IgIlNZTkMgd2l0aCBtYXN0ZXIgaW4gcHJvZ3Jlc3MiIHRvIGFsbCB0aGUga2luZCBvZiBjb21tYW5kcw0KIyAgICBidXQgdG8gSU5GTyBhbmQgU0xBVkVPRi4NCiMNCnNsYXZlLXNlcnZlLXN0YWxlLWRhdGEgeWVzDQoNCiMgU2xhdmVzIHNlbmQgUElOR3MgdG8gc2VydmVyIGluIGEgcHJlZGVmaW5lZCBpbnRlcnZhbC4gSXQncyBwb3NzaWJsZSB0byBjaGFuZ2UNCiMgdGhpcyBpbnRlcnZhbCB3aXRoIHRoZSByZXBsX3Bpbmdfc2xhdmVfcGVyaW9kIG9wdGlvbi4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgMTANCiMgc2Vjb25kcy4NCiMNCiMgcmVwbC1waW5nLXNsYXZlLXBlcmlvZCAxMA0KDQojIFRoZSBmb2xsb3dpbmcgb3B0aW9uIHNldHMgYSB0aW1lb3V0IGZvciBib3RoIEJ1bGsgdHJhbnNmZXIgSS9PIHRpbWVvdXQgYW5kDQojIG1hc3RlciBkYXRhIG9yIHBpbmcgcmVzcG9uc2UgdGltZW91dC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgNjAgc2Vjb25kcy4NCiMNCiMgSXQgaXMgaW1wb3J0YW50IHRvIG1ha2Ugc3VyZSB0aGF0IHRoaXMgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIHRoZSB2YWx1ZQ0KIyBzcGVjaWZpZWQgZm9yIHJlcGwtcGluZy1zbGF2ZS1wZXJpb2Qgb3RoZXJ3aXNlIGEgdGltZW91dCB3aWxsIGJlIGRldGVjdGVkDQojIGV2ZXJ5IHRpbWUgdGhlcmUgaXMgbG93IHRyYWZmaWMgYmV0d2VlbiB0aGUgbWFzdGVyIGFuZCB0aGUgc2xhdmUuDQojDQojIHJlcGwtdGltZW91dCA2MA0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIFNFQ1VSSVRZICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCiMgV2FybmluZzogc2luY2UgUmVkaXMgaXMgcHJldHR5IGZhc3QgYW4gb3V0c2lkZSB1c2VyIGNhbiB0cnkgdXAgdG8NCiMgMTUwayBwYXNzd29yZHMgcGVyIHNlY29uZCBhZ2FpbnN0IGEgZ29vZCBib3guIFRoaXMgbWVhbnMgdGhhdCB5b3Ugc2hvdWxkDQojIHVzZSBhIHZlcnkgc3Ryb25nIHBhc3N3b3JkIG90aGVyd2lzZSBpdCB3aWxsIGJlIHZlcnkgZWFzeSB0byBicmVhay4NCiMg6K6+572uUmVkaXPov57mjqXlr4bnoIHvvIzlpoLmnpzphY3nva7kuobov57mjqXlr4bnoIHvvIzlrqLmiLfnq6/lnKjov57mjqVSZWRpc+aXtumcgOimgemAmui/h2F1dGggPHBhc3N3b3JkPuWRveS7pOaPkOS+m+Wvhuegge+8jOm7mOiupOWFs+mXrQ0KcmVxdWlyZXBhc3MgMTIzNDU2DQojIENvbW1hbmQgcmVuYW1pbmcuDQojDQojIEl0IGlzIHBvc3NpbGJlIHRvIGNoYW5nZSB0aGUgbmFtZSBvZiBkYW5nZXJvdXMgY29tbWFuZHMgaW4gYSBzaGFyZWQNCiMgZW52aXJvbm1lbnQuIEZvciBpbnN0YW5jZSB0aGUgQ09ORklHIGNvbW1hbmQgbWF5IGJlIHJlbmFtZWQgaW50byBzb21ldGhpbmcNCiMgb2YgaGFyZCB0byBndWVzcyBzbyB0aGF0IGl0IHdpbGwgYmUgc3RpbGwgYXZhaWxhYmxlIGZvciBpbnRlcm5hbC11c2UNCiMgdG9vbHMgYnV0IG5vdCBhdmFpbGFibGUgZm9yIGdlbmVyYWwgY2xpZW50cy4NCiMNCiMgRXhhbXBsZToNCiMNCiMgcmVuYW1lLWNvbW1hbmQgQ09ORklHIGI4NDBmYzAyZDUyNDA0NTQyOTk0MWNjMTVmNTllNDFjYjdiZTZjNTINCiMNCiMgSXQgaXMgYWxzbyBwb3NzaWxiZSB0byBjb21wbGV0ZWx5IGtpbGwgYSBjb21tYW5kIHJlbmFtaW5nIGl0IGludG8NCiMgYW4gZW1wdHkgc3RyaW5nOg0KIw0KIyByZW5hbWUtY29tbWFuZCBDT05GSUcgIiINCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgTElNSVRTICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQojIOiuvue9ruWQjOS4gOaXtumXtOacgOWkp+WuouaIt+err+i/nuaOpeaVsO+8jOm7mOiupOaXoOmZkOWItu+8jFJlZGlz5Y+v5Lul5ZCM5pe25omT5byA55qE5a6i5oi356uv6L+e5o6l5pWw5Li6UmVkaXPov5vnqIvlj6/ku6XmiZPlvIDnmoTmnIDlpKfmlofku7bmj4/ov7DnrKbmlbDvvIwNCiMg5aaC5p6c6K6+572ubWF4Y2xpZW50cyAw77yM6KGo56S65LiN5L2c6ZmQ5Yi244CC5b2T5a6i5oi356uv6L+e5o6l5pWw5Yiw6L6+6ZmQ5Yi25pe277yMUmVkaXPkvJrlhbPpl63mlrDnmoTov57mjqXlubblkJHlrqLmiLfnq6/ov5Tlm55tYXggTnVtYmVyIG9mIGNsaWVudHMgcmVhY2hlZOmUmeivr+S/oeaBrw0KIyBtYXhjbGllbnRzIDEyOA0KDQojIERvbid0IHVzZSBtb3JlIG1lbW9yeSB0aGFuIHRoZSBzcGVjaWZpZWQgYW1vdW50IG9mIGJ5dGVzLg0KIyBXaGVuIHRoZSBtZW1vcnkgbGltaXQgaXMgcmVhY2hlZCBSZWRpcyB3aWxsIHRyeSB0byByZW1vdmUga2V5cyB3aXRoIGFuDQojIEVYUElSRSBzZXQuIEl0IHdpbGwgdHJ5IHRvIHN0YXJ0IGZyZWVpbmcga2V5cyB0aGF0IGFyZSBnb2luZyB0byBleHBpcmUNCiMgaW4gbGl0dGxlIHRpbWUgYW5kIHByZXNlcnZlIGtleXMgd2l0aCBhIGxvbmdlciB0aW1lIHRvIGxpdmUuDQojIFJlZGlzIHdpbGwgYWxzbyB0cnkgdG8gcmVtb3ZlIG9iamVjdHMgZnJvbSBmcmVlIGxpc3RzIGlmIHBvc3NpYmxlLg0KIw0KIyBJZiBhbGwgdGhpcyBmYWlscywgUmVkaXMgd2lsbCBzdGFydCB0byByZXBseSB3aXRoIGVycm9ycyB0byBjb21tYW5kcw0KIyB0aGF0IHdpbGwgdXNlIG1vcmUgbWVtb3J5LCBsaWtlIFNFVCwgTFBVU0gsIGFuZCBzbyBvbiwgYW5kIHdpbGwgY29udGludWUNCiMgdG8gcmVwbHkgdG8gbW9zdCByZWFkLW9ubHkgY29tbWFuZHMgbGlrZSBHRVQuDQojDQojIFdBUk5JTkc6IG1heG1lbW9yeSBjYW4gYmUgYSBnb29kIGlkZWEgbWFpbmx5IGlmIHlvdSB3YW50IHRvIHVzZSBSZWRpcyBhcyBhDQojICdzdGF0ZScgc2VydmVyIG9yIGNhY2hlLCBub3QgYXMgYSByZWFsIERCLiBXaGVuIFJlZGlzIGlzIHVzZWQgYXMgYSByZWFsDQojIGRhdGFiYXNlIHRoZSBtZW1vcnkgdXNhZ2Ugd2lsbCBncm93IG92ZXIgdGhlIHdlZWtzLCBpdCB3aWxsIGJlIG9idmlvdXMgaWYNCiMgaXQgaXMgZ29pbmcgdG8gdXNlIHRvbyBtdWNoIG1lbW9yeSBpbiB0aGUgbG9uZyBydW4sIGFuZCB5b3UnbGwgaGF2ZSB0aGUgdGltZQ0KIyB0byB1cGdyYWRlLiBXaXRoIG1heG1lbW9yeSBhZnRlciB0aGUgbGltaXQgaXMgcmVhY2hlZCB5b3UnbGwgc3RhcnQgdG8gZ2V0DQojIGVycm9ycyBmb3Igd3JpdGUgb3BlcmF0aW9ucywgYW5kIHRoaXMgbWF5IGV2ZW4gbGVhZCB0byBEQiBpbmNvbnNpc3RlbmN5Lg0KIyDmjIflrppSZWRpc+acgOWkp+WGheWtmOmZkOWItu+8jFJlZGlz5Zyo5ZCv5Yqo5pe25Lya5oqK5pWw5o2u5Yqg6L295Yiw5YaF5a2Y5Lit77yM6L6+5Yiw5pyA5aSn5YaF5a2Y5ZCO77yMUmVkaXPkvJrlhYjlsJ3or5XmuIXpmaTlt7LliLDmnJ/miJbljbPlsIbliLDmnJ/nmoRLZXnvvIwNCiMg5b2T5q2k5pa55rOV5aSE55CG5ZCO77yM5LuN54S25Yiw6L6+5pyA5aSn5YaF5a2Y6K6+572u77yM5bCG5peg5rOV5YaN6L+b6KGM5YaZ5YWl5pON5L2c77yM5L2G5LuN54S25Y+v5Lul6L+b6KGM6K+75Y+W5pON5L2c44CCDQojIFJlZGlz5paw55qEdm3mnLrliLbvvIzkvJrmiopLZXnlrZjmlL7lhoXlrZjvvIxWYWx1ZeS8muWtmOaUvuWcqHN3YXDljLoNCiMgbWF4bWVtb3J5IDxieXRlcz4NCg0KIyBNQVhNRU1PUlkgUE9MSUNZOiBob3cgUmVkaXMgd2lsbCBzZWxlY3Qgd2hhdCB0byByZW1vdmUgd2hlbiBtYXhtZW1vcnkNCiMgaXMgcmVhY2hlZD8gWW91IGNhbiBzZWxlY3QgYW1vbmcgZml2ZSBiZWhhdmlvcjoNCiMNCiMgdm9sYXRpbGUtbHJ1IC0+IHJlbW92ZSB0aGUga2V5IHdpdGggYW4gZXhwaXJlIHNldCB1c2luZyBhbiBMUlUgYWxnb3JpdGhtDQojIGFsbGtleXMtbHJ1IC0+IHJlbW92ZSBhbnkga2V5IGFjY29yZGluZ2x5IHRvIHRoZSBMUlUgYWxnb3JpdGhtDQojIHZvbGF0aWxlLXJhbmRvbSAtPiByZW1vdmUgYSByYW5kb20ga2V5IHdpdGggYW4gZXhwaXJlIHNldA0KIyBhbGxrZXlzLT5yYW5kb20gLT4gcmVtb3ZlIGEgcmFuZG9tIGtleSwgYW55IGtleQ0KIyB2b2xhdGlsZS10dGwgLT4gcmVtb3ZlIHRoZSBrZXkgd2l0aCB0aGUgbmVhcmVzdCBleHBpcmUgdGltZSAobWlub3IgVFRMKQ0KIyBub2V2aWN0aW9uIC0+IGRvbid0IGV4cGlyZSBhdCBhbGwsIGp1c3QgcmV0dXJuIGFuIGVycm9yIG9uIHdyaXRlIG9wZXJhdGlvbnMNCiMNCiMgTm90ZTogd2l0aCBhbGwgdGhlIGtpbmQgb2YgcG9saWNpZXMsIFJlZGlzIHdpbGwgcmV0dXJuIGFuIGVycm9yIG9uIHdyaXRlDQojICAgICAgIG9wZXJhdGlvbnMsIHdoZW4gdGhlcmUgYXJlIG5vdCBzdWl0YWJsZSBrZXlzIGZvciBldmljdGlvbi4NCiMNCiMgICAgICAgQXQgdGhlIGRhdGUgb2Ygd3JpdGluZyB0aGlzIGNvbW1hbmRzIGFyZTogc2V0IHNldG54IHNldGV4IGFwcGVuZA0KIyAgICAgICBpbmNyIGRlY3IgcnB1c2ggbHB1c2ggcnB1c2h4IGxwdXNoeCBsaW5zZXJ0IGxzZXQgcnBvcGxwdXNoIHNhZGQNCiMgICAgICAgc2ludGVyIHNpbnRlcnN0b3JlIHN1bmlvbiBzdW5pb25zdG9yZSBzZGlmZiBzZGlmZnN0b3JlIHphZGQgemluY3JieQ0KIyAgICAgICB6dW5pb25zdG9yZSB6aW50ZXJzdG9yZSBoc2V0IGhzZXRueCBobXNldCBoaW5jcmJ5IGluY3JieSBkZWNyYnkNCiMgICAgICAgZ2V0c2V0IG1zZXQgbXNldG54IGV4ZWMgc29ydA0KIw0KIyBUaGUgZGVmYXVsdCBpczoNCiMNCiMgbWF4bWVtb3J5LXBvbGljeSB2b2xhdGlsZS1scnUNCg0KIyBMUlUgYW5kIG1pbmltYWwgVFRMIGFsZ29yaXRobXMgYXJlIG5vdCBwcmVjaXNlIGFsZ29yaXRobXMgYnV0IGFwcHJveGltYXRlZA0KIyBhbGdvcml0aG1zIChpbiBvcmRlciB0byBzYXZlIG1lbW9yeSksIHNvIHlvdSBjYW4gc2VsZWN0IGFzIHdlbGwgdGhlIHNhbXBsZQ0KIyBzaXplIHRvIGNoZWNrLiBGb3IgaW5zdGFuY2UgZm9yIGRlZmF1bHQgUmVkaXMgd2lsbCBjaGVjayB0aHJlZSBrZXlzIGFuZA0KIyBwaWNrIHRoZSBvbmUgdGhhdCB3YXMgdXNlZCBsZXNzIHJlY2VudGx5LCB5b3UgY2FuIGNoYW5nZSB0aGUgc2FtcGxlIHNpemUNCiMgdXNpbmcgdGhlIGZvbGxvd2luZyBjb25maWd1cmF0aW9uIGRpcmVjdGl2ZS4NCiMNCiMgbWF4bWVtb3J5LXNhbXBsZXMgMw0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgQVBQRU5EIE9OTFkgTU9ERSAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCiMNCiMgTm90ZSB0aGF0IHlvdSBjYW4gaGF2ZSBib3RoIHRoZSBhc3luYyBkdW1wcyBhbmQgdGhlIGFwcGVuZCBvbmx5IGZpbGUgaWYgeW91DQojIGxpa2UgKHlvdSBoYXZlIHRvIGNvbW1lbnQgdGhlICJzYXZlIiBzdGF0ZW1lbnRzIGFib3ZlIHRvIGRpc2FibGUgdGhlIGR1bXBzKS4NCiMgU3RpbGwgaWYgYXBwZW5kIG9ubHkgbW9kZSBpcyBlbmFibGVkIFJlZGlzIHdpbGwgbG9hZCB0aGUgZGF0YSBmcm9tIHRoZQ0KIyBsb2cgZmlsZSBhdCBzdGFydHVwIGlnbm9yaW5nIHRoZSBkdW1wLnJkYiBmaWxlLg0KIyDmjIflrprmmK/lkKblnKjmr4/mrKHmm7TmlrDmk43kvZzlkI7ov5vooYzml6Xlv5forrDlvZXvvIxSZWRpc+WcqOm7mOiupOaDheWGteS4i+aYr+W8guatpeeahOaKiuaVsOaNruWGmeWFpeejgeebmO+8jOWmguaenOS4jeW8gOWQr++8jOWPr+iDveS8muWcqOaWreeUteaXtuWvvOiHtOS4gOauteaXtumXtOWGheeahOaVsOaNruS4ouWkseOAgg0KIyDlm6DkuLpyZWRpc+acrOi6q+WQjOatpeaVsOaNruaWh+S7tuaYr+aMieS4iumdonNhdmXmnaHku7bmnaXlkIzmraXnmoTvvIzmiYDku6XmnInnmoTmlbDmja7kvJrlnKjkuIDmrrXml7bpl7TlhoXlj6rlrZjlnKjkuo7lhoXlrZjkuK3jgILpu5jorqTkuLpubw0KIyBJTVBPUlRBTlQ6IENoZWNrIHRoZSBCR1JFV1JJVEVBT0YgdG8gY2hlY2sgaG93IHRvIHJld3JpdGUgdGhlIGFwcGVuZA0KIyBsb2cgZmlsZSBpbiBiYWNrZ3JvdW5kIHdoZW4gaXQgZ2V0cyB0b28gYmlnLg0KDQphcHBlbmRvbmx5IHllcw0KDQojIOaMh+WumuabtOaWsOaXpeW/l+aWh+S7tuWQje+8jOm7mOiupOS4umFwcGVuZG9ubHkuYW9mDQojIGFwcGVuZGZpbGVuYW1lIGFwcGVuZG9ubHkuYW9mDQoNCiMgVGhlIGZzeW5jKCkgY2FsbCB0ZWxscyB0aGUgT3BlcmF0aW5nIFN5c3RlbSB0byBhY3R1YWxseSB3cml0ZSBkYXRhIG9uIGRpc2sNCiMgaW5zdGVhZCB0byB3YWl0IGZvciBtb3JlIGRhdGEgaW4gdGhlIG91dHB1dCBidWZmZXIuIFNvbWUgT1Mgd2lsbCByZWFsbHkgZmx1c2gNCiMgZGF0YSBvbiBkaXNrLCBzb21lIG90aGVyIE9TIHdpbGwganVzdCB0cnkgdG8gZG8gaXQgQVNBUC4NCg0KIyDmjIflrprmm7TmlrDml6Xlv5fmnaHku7bvvIzlhbHmnIkz5Liq5Y+v6YCJ5YC877yaDQojIG5vOuihqOekuuetieaTjeS9nOezu+e7n+i/m+ihjOaVsOaNrue8k+WtmOWQjOatpeWIsOejgeebmO+8iOW/q++8iQ0KIyBhbHdheXM66KGo56S65q+P5qyh5pu05paw5pON5L2c5ZCO5omL5Yqo6LCD55SoZnN5bmMoKeWwhuaVsOaNruWGmeWIsOejgeebmO+8iOaFou+8jOWuieWFqO+8iQ0KIyBldmVyeXNlYzrooajnpLrmr4/np5LlkIzmraXkuIDmrKHvvIjmipjoobfvvIzpu5jorqTlgLzvvIkNCg0KYXBwZW5kZnN5bmMgZXZlcnlzZWMNCiMgYXBwZW5kZnN5bmMgbm8NCg0KIyBXaGVuIHRoZSBBT0YgZnN5bmMgcG9saWN5IGlzIHNldCB0byBhbHdheXMgb3IgZXZlcnlzZWMsIGFuZCBhIGJhY2tncm91bmQNCiMgc2F2aW5nIHByb2Nlc3MgKGEgYmFja2dyb3VuZCBzYXZlIG9yIEFPRiBsb2cgYmFja2dyb3VuZCByZXdyaXRpbmcpIGlzDQojIHBlcmZvcm1pbmcgYSBsb3Qgb2YgSS9PIGFnYWluc3QgdGhlIGRpc2ssIGluIHNvbWUgTGludXggY29uZmlndXJhdGlvbnMNCiMgUmVkaXMgbWF5IGJsb2NrIHRvbyBsb25nIG9uIHRoZSBmc3luYygpIGNhbGwuIE5vdGUgdGhhdCB0aGVyZSBpcyBubyBmaXggZm9yDQojIHRoaXMgY3VycmVudGx5LCBhcyBldmVuIHBlcmZvcm1pbmcgZnN5bmMgaW4gYSBkaWZmZXJlbnQgdGhyZWFkIHdpbGwgYmxvY2sNCiMgb3VyIHN5bmNocm9ub3VzIHdyaXRlKDIpIGNhbGwuDQojDQojIEluIG9yZGVyIHRvIG1pdGlnYXRlIHRoaXMgcHJvYmxlbSBpdCdzIHBvc3NpYmxlIHRvIHVzZSB0aGUgZm9sbG93aW5nIG9wdGlvbg0KIyB0aGF0IHdpbGwgcHJldmVudCBmc3luYygpIGZyb20gYmVpbmcgY2FsbGVkIGluIHRoZSBtYWluIHByb2Nlc3Mgd2hpbGUgYQ0KIyBCR1NBVkUgb3IgQkdSRVdSSVRFQU9GIGlzIGluIHByb2dyZXNzLg0KIw0KIyBUaGlzIG1lYW5zIHRoYXQgd2hpbGUgYW5vdGhlciBjaGlsZCBpcyBzYXZpbmcgdGhlIGR1cmFiaWxpdHkgb2YgUmVkaXMgaXMNCiMgdGhlIHNhbWUgYXMgImFwcGVuZGZzeW5jIG5vbmUiLCB0aGF0IGluIHByYXRpY2FsIHRlcm1zIG1lYW5zIHRoYXQgaXQgaXMNCiMgcG9zc2libGUgdG8gbG9zdCB1cCB0byAzMCBzZWNvbmRzIG9mIGxvZyBpbiB0aGUgd29yc3Qgc2NlbmFyaW8gKHdpdGggdGhlDQojIGRlZmF1bHQgTGludXggc2V0dGluZ3MpLg0KIw0KIyBJZiB5b3UgaGF2ZSBsYXRlbmN5IHByb2JsZW1zIHR1cm4gdGhpcyB0byAieWVzIi4gT3RoZXJ3aXNlIGxlYXZlIGl0IGFzDQojICJubyIgdGhhdCBpcyB0aGUgc2FmZXN0IHBpY2sgZnJvbSB0aGUgcG9pbnQgb2YgdmlldyBvZiBkdXJhYmlsaXR5Lg0Kbm8tYXBwZW5kZnN5bmMtb24tcmV3cml0ZSBubw0KDQojIEF1dG9tYXRpYyByZXdyaXRlIG9mIHRoZSBhcHBlbmQgb25seSBmaWxlLg0KIyBSZWRpcyBpcyBhYmxlIHRvIGF1dG9tYXRpY2FsbHkgcmV3cml0ZSB0aGUgbG9nIGZpbGUgaW1wbGljaXRseSBjYWxsaW5nDQojIEJHUkVXUklURUFPRiB3aGVuIHRoZSBBT0YgbG9nIHNpemUgd2lsbCBncm93dGggYnkgdGhlIHNwZWNpZmllZCBwZXJjZW50YWdlLg0KIw0KIyBUaGlzIGlzIGhvdyBpdCB3b3JrczogUmVkaXMgcmVtZW1iZXJzIHRoZSBzaXplIG9mIHRoZSBBT0YgZmlsZSBhZnRlciB0aGUNCiMgbGF0ZXN0IHJld3JpdGUgKG9yIGlmIG5vIHJld3JpdGUgaGFwcGVuZWQgc2luY2UgdGhlIHJlc3RhcnQsIHRoZSBzaXplIG9mDQojIHRoZSBBT0YgYXQgc3RhcnR1cCBpcyB1c2VkKS4NCiMNCiMgVGhpcyBiYXNlIHNpemUgaXMgY29tcGFyZWQgdG8gdGhlIGN1cnJlbnQgc2l6ZS4gSWYgdGhlIGN1cnJlbnQgc2l6ZSBpcw0KIyBiaWdnZXIgdGhhbiB0aGUgc3BlY2lmaWVkIHBlcmNlbnRhZ2UsIHRoZSByZXdyaXRlIGlzIHRyaWdnZXJlZC4gQWxzbw0KIyB5b3UgbmVlZCB0byBzcGVjaWZ5IGEgbWluaW1hbCBzaXplIGZvciB0aGUgQU9GIGZpbGUgdG8gYmUgcmV3cml0dGVuLCB0aGlzDQojIGlzIHVzZWZ1bCB0byBhdm9pZCByZXdyaXRpbmcgdGhlIEFPRiBmaWxlIGV2ZW4gaWYgdGhlIHBlcmNlbnRhZ2UgaW5jcmVhc2UNCiMgaXMgcmVhY2hlZCBidXQgaXQgaXMgc3RpbGwgcHJldHR5IHNtYWxsLg0KIw0KIyBTcGVjaWZ5IGEgcHJlY2VudGFnZSBvZiB6ZXJvIGluIG9yZGVyIHRvIGRpc2FibGUgdGhlIGF1dG9tYXRpYyBBT0YNCiMgcmV3cml0ZSBmZWF0dXJlLg0KDQphdXRvLWFvZi1yZXdyaXRlLXBlcmNlbnRhZ2UgMTAwDQphdXRvLWFvZi1yZXdyaXRlLW1pbi1zaXplIDY0bWINCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBTTE9XIExPRyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQojIFRoZSBSZWRpcyBTbG93IExvZyBpcyBhIHN5c3RlbSB0byBsb2cgcXVlcmllcyB0aGF0IGV4Y2VlZGVkIGEgc3BlY2lmaWVkDQojIGV4ZWN1dGlvbiB0aW1lLiBUaGUgZXhlY3V0aW9uIHRpbWUgZG9lcyBub3QgaW5jbHVkZSB0aGUgSS9PIG9wZXJhdGlvbnMNCiMgbGlrZSB0YWxraW5nIHdpdGggdGhlIGNsaWVudCwgc2VuZGluZyB0aGUgcmVwbHkgYW5kIHNvIGZvcnRoLA0KIyBidXQganVzdCB0aGUgdGltZSBuZWVkZWQgdG8gYWN0dWFsbHkgZXhlY3V0ZSB0aGUgY29tbWFuZCAodGhpcyBpcyB0aGUgb25seQ0KIyBzdGFnZSBvZiBjb21tYW5kIGV4ZWN1dGlvbiB3aGVyZSB0aGUgdGhyZWFkIGlzIGJsb2NrZWQgYW5kIGNhbiBub3Qgc2VydmUNCiMgb3RoZXIgcmVxdWVzdHMgaW4gdGhlIG1lYW50aW1lKS4NCiMNCiMgWW91IGNhbiBjb25maWd1cmUgdGhlIHNsb3cgbG9nIHdpdGggdHdvIHBhcmFtZXRlcnM6IG9uZSB0ZWxscyBSZWRpcw0KIyB3aGF0IGlzIHRoZSBleGVjdXRpb24gdGltZSwgaW4gbWljcm9zZWNvbmRzLCB0byBleGNlZWQgaW4gb3JkZXIgZm9yIHRoZQ0KIyBjb21tYW5kIHRvIGdldCBsb2dnZWQsIGFuZCB0aGUgb3RoZXIgcGFyYW1ldGVyIGlzIHRoZSBsZW5ndGggb2YgdGhlDQojIHNsb3cgbG9nLiBXaGVuIGEgbmV3IGNvbW1hbmQgaXMgbG9nZ2VkIHRoZSBvbGRlc3Qgb25lIGlzIHJlbW92ZWQgZnJvbSB0aGUNCiMgcXVldWUgb2YgbG9nZ2VkIGNvbW1hbmRzLg0KDQojIFRoZSBmb2xsb3dpbmcgdGltZSBpcyBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLCBzbyAxMDAwMDAwIGlzIGVxdWl2YWxlbnQNCiMgdG8gb25lIHNlY29uZC4gTm90ZSB0aGF0IGEgbmVnYXRpdmUgbnVtYmVyIGRpc2FibGVzIHRoZSBzbG93IGxvZywgd2hpbGUNCiMgYSB2YWx1ZSBvZiB6ZXJvIGZvcmNlcyB0aGUgbG9nZ2luZyBvZiBldmVyeSBjb21tYW5kLg0Kc2xvd2xvZy1sb2ctc2xvd2VyLXRoYW4gMTAwMDANCg0KIyBUaGVyZSBpcyBubyBsaW1pdCB0byB0aGlzIGxlbmd0aC4gSnVzdCBiZSBhd2FyZSB0aGF0IGl0IHdpbGwgY29uc3VtZSBtZW1vcnkuDQojIFlvdSBjYW4gcmVjbGFpbSBtZW1vcnkgdXNlZCBieSB0aGUgc2xvdyBsb2cgd2l0aCBTTE9XTE9HIFJFU0VULg0Kc2xvd2xvZy1tYXgtbGVuIDEwMjQNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgVklSVFVBTCBNRU1PUlkgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQojIyMgV0FSTklORyEgVmlydHVhbCBNZW1vcnkgaXMgZGVwcmVjYXRlZCBpbiBSZWRpcyAyLjQNCiMjIyBUaGUgdXNlIG9mIFZpcnR1YWwgTWVtb3J5IGlzIHN0cm9uZ2x5IGRpc2NvdXJhZ2VkLg0KDQojIyMgV0FSTklORyEgVmlydHVhbCBNZW1vcnkgaXMgZGVwcmVjYXRlZCBpbiBSZWRpcyAyLjQNCiMjIyBUaGUgdXNlIG9mIFZpcnR1YWwgTWVtb3J5IGlzIHN0cm9uZ2x5IGRpc2NvdXJhZ2VkLg0KDQojIFZpcnR1YWwgTWVtb3J5IGFsbG93cyBSZWRpcyB0byB3b3JrIHdpdGggZGF0YXNldHMgYmlnZ2VyIHRoYW4gdGhlIGFjdHVhbA0KIyBhbW91bnQgb2YgUkFNIG5lZWRlZCB0byBob2xkIHRoZSB3aG9sZSBkYXRhc2V0IGluIG1lbW9yeS4NCiMgSW4gb3JkZXIgdG8gZG8gc28gdmVyeSB1c2VkIGtleXMgYXJlIHRha2VuIGluIG1lbW9yeSB3aGlsZSB0aGUgb3RoZXIga2V5cw0KIyBhcmUgc3dhcHBlZCBpbnRvIGEgc3dhcCBmaWxlLCBzaW1pbGFybHkgdG8gd2hhdCBvcGVyYXRpbmcgc3lzdGVtcyBkbw0KIyB3aXRoIG1lbW9yeSBwYWdlcy4NCiMg5oyH5a6a5piv5ZCm5ZCv55So6Jma5ouf5YaF5a2Y5py65Yi277yM6buY6K6k5YC85Li6bm/vvIwNCiMgVk3mnLrliLblsIbmlbDmja7liIbpobXlrZjmlL7vvIznlLFSZWRpc+Wwhuiuv+mXrumHj+i+g+WwkeeahOmhteWNs+WGt+aVsOaNrnN3YXDliLDno4Hnm5jkuIrvvIzorr/pl67lpJrnmoTpobXpnaLnlLHno4Hnm5joh6rliqjmjaLlh7rliLDlhoXlrZjkuK0NCiMg5oqKdm0tZW5hYmxlZOiuvue9ruS4unllc++8jOagueaNrumcgOimgeiuvue9ruWlveaOpeS4i+adpeeahOS4ieS4qlZN5Y+C5pWw77yM5bCx5Y+v5Lul5ZCv5YqoVk3kuoYNCiMgdm0tZW5hYmxlZCBubw0KIyB2bS1lbmFibGVkIHllcw0KDQojIFRoaXMgaXMgdGhlIHBhdGggb2YgdGhlIFJlZGlzIHN3YXAgZmlsZS4gQXMgeW91IGNhbiBndWVzcywgc3dhcCBmaWxlcw0KIyBjYW4ndCBiZSBzaGFyZWQgYnkgZGlmZmVyZW50IFJlZGlzIGluc3RhbmNlcywgc28gbWFrZSBzdXJlIHRvIHVzZSBhIHN3YXANCiMgZmlsZSBmb3IgZXZlcnkgcmVkaXMgcHJvY2VzcyB5b3UgYXJlIHJ1bm5pbmcuIFJlZGlzIHdpbGwgY29tcGxhaW4gaWYgdGhlDQojIHN3YXAgZmlsZSBpcyBhbHJlYWR5IGluIHVzZS4NCiMNCiMgUmVkaXPkuqTmjaLmlofku7bmnIDlpb3nmoTlrZjlgqjmmK9TU0TvvIjlm7rmgIHnoaznm5jvvIkNCiMg6Jma5ouf5YaF5a2Y5paH5Lu26Lev5b6E77yM6buY6K6k5YC85Li6L3RtcC9yZWRpcy5zd2Fw77yM5LiN5Y+v5aSa5LiqUmVkaXPlrp7kvovlhbHkuqsNCiMgKioqIFdBUk5JTkcgKioqIGlmIHlvdSBhcmUgdXNpbmcgYSBzaGFyZWQgaG9zdGluZyB0aGUgZGVmYXVsdCBvZiBwdXR0aW5nDQojIHRoZSBzd2FwIGZpbGUgdW5kZXIgL3RtcCBpcyBub3Qgc2VjdXJlLiBDcmVhdGUgYSBkaXIgd2l0aCBhY2Nlc3MgZ3JhbnRlZA0KIyBvbmx5IHRvIFJlZGlzIHVzZXIgYW5kIGNvbmZpZ3VyZSBSZWRpcyB0byBjcmVhdGUgdGhlIHN3YXAgZmlsZSB0aGVyZS4NCiMgdm0tc3dhcC1maWxlIC90bXAvcmVkaXMuc3dhcA0KDQojIFdpdGggdm0tbWF4LW1lbW9yeSAwIHRoZSBzeXN0ZW0gd2lsbCBzd2FwIGV2ZXJ5dGhpbmcgaXQgY2FuLiBOb3QgYSBnb29kDQojIGRlZmF1bHQsIGp1c3Qgc3BlY2lmeSB0aGUgbWF4IGFtb3VudCBvZiBSQU0geW91IGNhbiBpbiBieXRlcywgYnV0IGl0J3MNCiMgYmV0dGVyIHRvIGxlYXZlIHNvbWUgbWFyZ2luLiBGb3IgaW5zdGFuY2Ugc3BlY2lmeSBhbiBhbW91bnQgb2YgUkFNDQojIHRoYXQncyBtb3JlIG9yIGxlc3MgYmV0d2VlbiA2MCBhbmQgODAlIG9mIHlvdXIgZnJlZSBSQU0uDQojIOWwhuaJgOacieWkp+S6jnZtLW1heC1tZW1vcnnnmoTmlbDmja7lrZjlhaXomZrmi5/lhoXlrZjvvIzml6Dorrp2bS1tYXgtbWVtb3J56K6+572u5aSa5bCR77yM5omA5pyJ57Si5byV5pWw5o2u6YO95piv5YaF5a2Y5a2Y5YKo55qE77yIUmVkaXPnmoTntKLlvJXmlbDmja7lsLHmmK9rZXlz77yJDQojIOS5n+WwseaYr+ivtOW9k3ZtLW1heC1tZW1vcnnorr7nva7kuLow55qE5pe25YCZ77yM5YW25a6e5piv5omA5pyJdmFsdWXpg73lrZjlnKjkuo7no4Hnm5jjgILpu5jorqTlgLzkuLowDQojIHZtLW1heC1tZW1vcnkgMA0KDQojIFJlZGlzIHN3YXDmlofku7bliIbmiJDkuoblvojlpJrnmoRwYWdl77yM5LiA5Liq5a+56LGh5Y+v5Lul5L+d5a2Y5Zyo5aSa5LiqcGFnZeS4iumdou+8jOS9huS4gOS4qnBhZ2XkuIrkuI3og73ooqvlpJrkuKrlr7nosaHlhbHkuqvvvIx2bS1wYWdlLXNpemXmmK/opoHmoLnmja7lrZjlgqjnmoTmlbDmja7lpKflsI/mnaXorr7lrprnmoTjgIINCiMg5bu66K6u5aaC5p6c5a2Y5YKo5b6I5aSa5bCP5a+56LGh77yMcGFnZeWkp+Wwj+acgOWQjuiuvue9ruS4ujMy5oiWNjRieXRlc++8m+WmguaenOWtmOWCqOW+iOWkp+eahOWvueixoe+8jOWImeWPr+S7peS9v+eUqOabtOWkp+eahHBhZ2XvvIzlpoLmnpzkuI3noa7lrprvvIzlsLHkvb/nlKjpu5jorqTlgLwNCiMgdm0tcGFnZS1zaXplIDMyDQoNCiMg6K6+572uc3dhcOaWh+S7tuS4reeahHBhZ2XmlbDph4/nlLHkuo7pobXooajvvIjkuIDnp43ooajnpLrpobXpnaLnqbrpl7LmiJbkvb/nlKjnmoRiaXRtYXDvvInmmK/lrZjmlL7lnKjlhoXlrZjkuK3nmoTvvIzlnKjno4Hnm5jkuIrmr4845LiqcGFnZXPlsIbmtojogJcxYnl0ZeeahOWGheWtmA0KIyBzd2Fw56m66Ze05oC75a656YeP5Li6IHZtLXBhZ2Utc2l6ZSAqIHZtLXBhZ2VzDQojDQojIFdpdGggdGhlIGRlZmF1bHQgb2YgMzItYnl0ZXMgbWVtb3J5IHBhZ2VzIGFuZCAxMzQyMTc3MjggcGFnZXMgUmVkaXMgd2lsbA0KIyB1c2UgYSA0IEdCIHN3YXAgZmlsZSwgdGhhdCB3aWxsIHVzZSAxNiBNQiBvZiBSQU0gZm9yIHRoZSBwYWdlIHRhYmxlLg0KIw0KIyBJdCdzIGJldHRlciB0byB1c2UgdGhlIHNtYWxsZXN0IGFjY2VwdGFibGUgdmFsdWUgZm9yIHlvdXIgYXBwbGljYXRpb24sDQojIGJ1dCB0aGUgZGVmYXVsdCBpcyBsYXJnZSBpbiBvcmRlciB0byB3b3JrIGluIG1vc3QgY29uZGl0aW9ucy4NCiMgdm0tcGFnZXMgMTM0MjE3NzI4DQoNCiMgTWF4IG51bWJlciBvZiBWTSBJL08gdGhyZWFkcyBydW5uaW5nIGF0IHRoZSBzYW1lIHRpbWUuDQojIFRoaXMgdGhyZWFkcyBhcmUgdXNlZCB0byByZWFkL3dyaXRlIGRhdGEgZnJvbS90byBzd2FwIGZpbGUsIHNpbmNlIHRoZXkNCiMgYWxzbyBlbmNvZGUgYW5kIGRlY29kZSBvYmplY3RzIGZyb20gZGlzayB0byBtZW1vcnkgb3IgdGhlIHJldmVyc2UsIGEgYmlnZ2VyDQojIG51bWJlciBvZiB0aHJlYWRzIGNhbiBoZWxwIHdpdGggYmlnIG9iamVjdHMgZXZlbiBpZiB0aGV5IGNhbid0IGhlbHAgd2l0aA0KIyBJL08gaXRzZWxmIGFzIHRoZSBwaHlzaWNhbCBkZXZpY2UgbWF5IG5vdCBiZSBhYmxlIHRvIGNvdXBsZSB3aXRoIG1hbnkNCiMgcmVhZHMvd3JpdGVzIG9wZXJhdGlvbnMgYXQgdGhlIHNhbWUgdGltZS4NCiMg6K6+572u6K6/6Zeuc3dhcOaWh+S7tueahEkvT+e6v+eoi+aVsO+8jOacgOWQjuS4jeimgei2hei/h+acuuWZqOeahOaguOaVsO+8jOWmguaenOiuvue9ruS4ujDvvIzpgqPkuYjmiYDmnInlr7lzd2Fw5paH5Lu255qE5pON5L2c6YO95piv5Liy6KGM55qE77yM5Y+v6IO95Lya6YCg5oiQ5q+U6L6D6ZW/5pe26Ze055qE5bu26L+f77yM6buY6K6k5YC85Li6NA0KIyB2bS1tYXgtdGhyZWFkcyA0DQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgQURWQU5DRUQgQ09ORklHICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KIyBIYXNoZXMgYXJlIGVuY29kZWQgaW4gYSBzcGVjaWFsIHdheSAobXVjaCBtb3JlIG1lbW9yeSBlZmZpY2llbnQpIHdoZW4gdGhleQ0KIyBoYXZlIGF0IG1heCBhIGdpdmVuIG51bWVyIG9mIGVsZW1lbnRzLCBhbmQgdGhlIGJpZ2dlc3QgZWxlbWVudCBkb2VzIG5vdA0KIyBleGNlZWQgYSBnaXZlbiB0aHJlc2hvbGQuIFlvdSBjYW4gY29uZmlndXJlIHRoaXMgbGltaXRzIHdpdGggdGhlIGZvbGxvd2luZw0KIyBjb25maWd1cmF0aW9uIGRpcmVjdGl2ZXMuDQojIOaMh+WumuWcqOi2hei/h+S4gOWumueahOaVsOmHj+aIluiAheacgOWkp+eahOWFg+e0oOi2hei/h+afkOS4gOS4tOeVjOWAvOaXtu+8jOmHh+eUqOS4gOenjeeJueauiueahOWTiOW4jOeul+azlQ0KIyBoYXNoLW1heC16aXBtYXAtZW50cmllcyA1MTINCiMgaGFzaC1tYXgtemlwbWFwLXZhbHVlIDY0DQoNCiMgU2ltaWxhcmx5IHRvIGhhc2hlcywgc21hbGwgbGlzdHMgYXJlIGFsc28gZW5jb2RlZCBpbiBhIHNwZWNpYWwgd2F5IGluIG9yZGVyDQojIHRvIHNhdmUgYSBsb3Qgb2Ygc3BhY2UuIFRoZSBzcGVjaWFsIHJlcHJlc2VudGF0aW9uIGlzIG9ubHkgdXNlZCB3aGVuDQojIHlvdSBhcmUgdW5kZXIgdGhlIGZvbGxvd2luZyBsaW1pdHM6DQpsaXN0LW1heC16aXBsaXN0LWVudHJpZXMgNTEyDQpsaXN0LW1heC16aXBsaXN0LXZhbHVlIDY0DQoNCiMgU2V0cyBoYXZlIGEgc3BlY2lhbCBlbmNvZGluZyBpbiBqdXN0IG9uZSBjYXNlOiB3aGVuIGEgc2V0IGlzIGNvbXBvc2VkDQojIG9mIGp1c3Qgc3RyaW5ncyB0aGF0IGhhcHBlbnMgdG8gYmUgaW50ZWdlcnMgaW4gcmFkaXggMTAgaW4gdGhlIHJhbmdlDQojIG9mIDY0IGJpdCBzaWduZWQgaW50ZWdlcnMuDQojIFRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiBzZXR0aW5nIHNldHMgdGhlIGxpbWl0IGluIHRoZSBzaXplIG9mIHRoZQ0KIyBzZXQgaW4gb3JkZXIgdG8gdXNlIHRoaXMgc3BlY2lhbCBtZW1vcnkgc2F2aW5nIGVuY29kaW5nLg0Kc2V0LW1heC1pbnRzZXQtZW50cmllcyA1MTINCg0KIyBTaW1pbGFybHkgdG8gaGFzaGVzIGFuZCBsaXN0cywgc29ydGVkIHNldHMgYXJlIGFsc28gc3BlY2lhbGx5IGVuY29kZWQgaW4NCiMgb3JkZXIgdG8gc2F2ZSBhIGxvdCBvZiBzcGFjZS4gVGhpcyBlbmNvZGluZyBpcyBvbmx5IHVzZWQgd2hlbiB0aGUgbGVuZ3RoIGFuZA0KIyBlbGVtZW50cyBvZiBhIHNvcnRlZCBzZXQgYXJlIGJlbG93IHRoZSBmb2xsb3dpbmcgbGltaXRzOg0KenNldC1tYXgtemlwbGlzdC1lbnRyaWVzIDEyOA0KenNldC1tYXgtemlwbGlzdC12YWx1ZSA2NA0KDQojIEFjdGl2ZSByZWhhc2hpbmcgdXNlcyAxIG1pbGxpc2Vjb25kIGV2ZXJ5IDEwMCBtaWxsaXNlY29uZHMgb2YgQ1BVIHRpbWUgaW4NCiMgb3JkZXIgdG8gaGVscCByZWhhc2hpbmcgdGhlIG1haW4gUmVkaXMgaGFzaCB0YWJsZSAodGhlIG9uZSBtYXBwaW5nIHRvcC1sZXZlbA0KIyBrZXlzIHRvIHZhbHVlcykuIFRoZSBoYXNoIHRhYmxlIGltcGxlbWVudGF0aW9uIHJlZGlzIHVzZXMgKHNlZSBkaWN0LmMpDQojIHBlcmZvcm1zIGEgbGF6eSByZWhhc2hpbmc6IHRoZSBtb3JlIG9wZXJhdGlvbiB5b3UgcnVuIGludG8gYW4gaGFzaCB0YWJsZQ0KIyB0aGF0IGlzIHJoYXNoaW5nLCB0aGUgbW9yZSByZWhhc2hpbmcgInN0ZXBzIiBhcmUgcGVyZm9ybWVkLCBzbyBpZiB0aGUNCiMgc2VydmVyIGlzIGlkbGUgdGhlIHJlaGFzaGluZyBpcyBuZXZlciBjb21wbGV0ZSBhbmQgc29tZSBtb3JlIG1lbW9yeSBpcyB1c2VkDQojIGJ5IHRoZSBoYXNoIHRhYmxlLg0KIw0KIyBUaGUgZGVmYXVsdCBpcyB0byB1c2UgdGhpcyBtaWxsaXNlY29uZCAxMCB0aW1lcyBldmVyeSBzZWNvbmQgaW4gb3JkZXIgdG8NCiMgYWN0aXZlIHJlaGFzaGluZyB0aGUgbWFpbiBkaWN0aW9uYXJpZXMsIGZyZWVpbmcgbWVtb3J5IHdoZW4gcG9zc2libGUuDQojDQojIElmIHVuc3VyZToNCiMgdXNlICJhY3RpdmVyZWhhc2hpbmcgbm8iIGlmIHlvdSBoYXZlIGhhcmQgbGF0ZW5jeSByZXF1aXJlbWVudHMgYW5kIGl0IGlzDQojIG5vdCBhIGdvb2QgdGhpbmcgaW4geW91ciBlbnZpcm9ubWVudCB0aGF0IFJlZGlzIGNhbiByZXBseSBmb3JtIHRpbWUgdG8gdGltZQ0KIyB0byBxdWVyaWVzIHdpdGggMiBtaWxsaXNlY29uZHMgZGVsYXkuDQojIOaMh+WumuaYr+WQpua/gOa0u+mHjee9ruWTiOW4jO+8jOm7mOiupOS4uuW8gOWQrw0KYWN0aXZlcmVoYXNoaW5nIHllcw0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIElOQ0xVREVTICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCiMg5oyH5a6a5YyF5ZCr5YW25LuW55qE6YWN572u5paH5Lu277yM5Y+v5Lul5Zyo5ZCM5LiA5Li75py65LiK5aSa5LiqUmVkaXPlrp7kvovkuYvpl7Tkvb/nlKjlkIzkuIDku73phY3nva7mlofku7bvvIzogIzlkIzml7blkITlrp7kvovlj4jmi6XmnInoh6rlt7HnmoTnibnlrprphY3nva7mlofku7YNCiMgaW5jbHVkZSAvcGF0aC90by9sb2NhbC5jb25mDQojIGluY2x1ZGUgL3BhdGgvdG8vb3RoZXIuY29uZg==
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis-cm1
