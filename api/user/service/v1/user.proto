syntax = "proto3";

package api.user.service.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "beetle/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

service User {
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
		option (google.api.http) = {
			post: "/user/v1/create"
			body: "*"
		};
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
		option (google.api.http) = {
			post: "/user/v1/update"
			body: "*"
		};
	}
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
		option (google.api.http) = {
			post: "/user/v1/delete"
			body: "*"
		};
	}
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
		option (google.api.http) = {
			post: "/user/v1/list"
			body: "*"
		};
	}
	rpc LoginUser (LoginUserRequest) returns (LoginUserReply) {
		option (google.api.http) = {
			post: "/user/v1/login"
			body: "*"
		};
	}
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			post: "/user/v1/get"
			body: "*"
		};
	}
	rpc ListFriend (ListFriendRequest) returns (ListFriendReply) {
		option (google.api.http) = {
			post: "/user/v1/friend/list"
			body: "*"
		};
	}
}

message CreateUserRequest {}
message CreateUserReply {}

message UpdateUserRequest {}
message UpdateUserReply {}

message DeleteUserRequest {}
message DeleteUserReply {}

message ListUserRequest {}
message ListUserReply {}

message LoginUserRequest {
	string username = 1 [(validate.rules).string.pattern = "(?i)^[0-9a-z]{4,16}$"];
	string password = 2 [(validate.rules).string.pattern = "(?i)^[0-9_a-z]{6,16}$"];
}
message LoginUserReply {
	string token = 1;
	int64 expired_time = 2;
	int64 id = 3;
	string username = 4;
	string nickname = 5;
	string avatar = 6;
}

message GetUserRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
}
message GetUserReply {
	int64 user_id = 1;
	string username = 2;
	string nickname = 3;
	string avatar = 4;
	string memo = 5;
}

message ListFriendRequest {}
message ListFriendReply {
	message Friend {
		int64 id = 1;
		int64 user_id = 2;
		string username = 3;
		string nickname = 4;
		string avatar = 5;
		string memo = 6;
	}
	repeated Friend friends = 1;
}
