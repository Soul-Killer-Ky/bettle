syntax = "proto3";

package api.user.service.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "beetle/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

service User {
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
		option (google.api.http) = {
			post: "/user/v1/create"
			body: "*"
		};
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
		option (google.api.http) = {
			post: "/user/v1/update"
			body: "*"
		};
	}
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
		option (google.api.http) = {
			post: "/user/v1/delete"
			body: "*"
		};
	}
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
		option (google.api.http) = {
			post: "/user/v1/list"
			body: "*"
		};
	}
	rpc LoginUser (LoginUserRequest) returns (LoginUserReply) {
		option (google.api.http) = {
			post: "/user/v1/login"
			body: "*"
		};
	}
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
		option (google.api.http) = {
			post: "/user/v1/get"
			body: "*"
		};
	}
	rpc ListFriend (ListFriendRequest) returns (ListFriendReply) {
		option (google.api.http) = {
			post: "/user/v1/friend/list"
			body: "*"
		};
	}
	rpc AddFriend (AddFriendRequest) returns (AddFriendReply) {
		option (google.api.http) = {
			post: "/user/v1/friend/add"
			body: "*"
		};
	}
	rpc ListGroup (ListGroupRequest) returns (ListGroupReply) {
		option (google.api.http) = {
			post: "/user/v1/group/list"
			body: "*"
		};
	}
	rpc JoinGroup (JoinGroupRequest) returns (JoinGroupReply) {
		option (google.api.http) = {
			post: "/user/v1/group/join"
			body: "*"
		};
	}
	rpc CreateGroup (CreateGroupRequest) returns (CreateGroupReply) {
		option (google.api.http) = {
			post: "/user/v1/group/create"
			body: "*"
		};
	}
}

message CreateUserRequest {}
message CreateUserReply {}

message UpdateUserRequest {}
message UpdateUserReply {}

message DeleteUserRequest {}
message DeleteUserReply {}

message ListUserRequest {}
message ListUserReply {}

message LoginUserRequest {
	string username = 1 [(validate.rules).string.pattern = "(?i)^[0-9a-z]{4,16}$"];
	string password = 2 [(validate.rules).string.pattern = "(?i)^[0-9_a-z]{6,16}$"];
}
message LoginUserReply {
	string token = 1;
	int64 expired_time = 2;
	int64 id = 3;
	string phone = 4;
	string username = 5;
	string nickname = 6;
	string avatar = 7;
	string memo = 8;
}

message GetUserRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
}
message GetUserReply {
	int64 user_id = 1;
	string phone = 2;
	string username = 3;
	string nickname = 4;
	string avatar = 5;
	string memo = 6;
}

message Friend {
	int64 user_id = 1;
	string phone = 2;
	string username = 3;
	string nickname = 4;
	string avatar = 5;
	string memo = 6;
}

message ListFriendRequest {}
message ListFriendReply {
	repeated Friend friends = 1;
}

message AddFriendRequest {
	string phone = 1 [(validate.rules).string.pattern = "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$"];
}
message AddFriendReply {
	Friend friend = 1;
}

message Group {
	int64 id = 1;
	int32 type = 2;
	string name = 3;
	string icon = 4;
	string memo = 5;
}

message ListGroupRequest {}
message ListGroupReply {
	repeated Group groups = 1;
}

message JoinGroupRequest {
	string group_name = 1 [(validate.rules).string = {min_len: 6, max_len: 30}];
}
message JoinGroupReply {
	Group group = 1;
}

message CreateGroupRequest {
	int32 type = 1;
	string name = 2 [(validate.rules).string.pattern = "^[u4e00-u9fa5,\\w,-]{4,20}$"];
	string icon = 3;
	string memo = 4;
}
message CreateGroupReply {
	Group group = 1;
}
