# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /im/v1/connect:
        get:
            tags:
                - Im
            operationId: Im_ConnectIm
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.im.service.v1.ConnectImReply'
    /user/v1/create:
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.CreateUserReply'
    /user/v1/delete:
        post:
            tags:
                - User
            operationId: User_DeleteUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.DeleteUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteUserReply'
    /user/v1/friend/add:
        post:
            tags:
                - User
            operationId: User_AddFriend
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.AddFriendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AddFriendReply'
    /user/v1/friend/list:
        post:
            tags:
                - User
            operationId: User_ListFriend
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ListFriendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListFriendReply'
    /user/v1/get:
        post:
            tags:
                - User
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserReply'
    /user/v1/group/create:
        post:
            tags:
                - User
            operationId: User_CreateGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.CreateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.CreateGroupReply'
    /user/v1/group/join:
        post:
            tags:
                - User
            operationId: User_JoinGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.JoinGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.JoinGroupReply'
    /user/v1/group/list:
        post:
            tags:
                - User
            operationId: User_ListGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ListGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListGroupReply'
    /user/v1/group/list_user:
        post:
            tags:
                - User
            operationId: User_ListUserByGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ListUserByGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListUserByGroupReply'
    /user/v1/list:
        post:
            tags:
                - User
            operationId: User_ListUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ListUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListUserReply'
    /user/v1/login:
        post:
            tags:
                - User
            operationId: User_LoginUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LoginUserReply'
    /user/v1/update:
        post:
            tags:
                - User
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UpdateUserReply'
components:
    schemas:
        api.im.service.v1.ConnectImReply:
            type: object
            properties: {}
        api.user.service.v1.AddFriendReply:
            type: object
            properties:
                friend:
                    $ref: '#/components/schemas/api.user.service.v1.Friend'
        api.user.service.v1.AddFriendRequest:
            type: object
            properties:
                phone:
                    type: string
        api.user.service.v1.CreateGroupReply:
            type: object
            properties:
                group:
                    $ref: '#/components/schemas/api.user.service.v1.Group'
        api.user.service.v1.CreateGroupRequest:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                name:
                    type: string
                icon:
                    type: string
                memo:
                    type: string
        api.user.service.v1.CreateUserReply:
            type: object
            properties: {}
        api.user.service.v1.CreateUserRequest:
            type: object
            properties: {}
        api.user.service.v1.DeleteUserReply:
            type: object
            properties: {}
        api.user.service.v1.DeleteUserRequest:
            type: object
            properties: {}
        api.user.service.v1.Friend:
            type: object
            properties:
                userId:
                    type: integer
                    format: int64
                phone:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                memo:
                    type: string
        api.user.service.v1.GetUserReply:
            type: object
            properties:
                userId:
                    type: integer
                    format: int64
                phone:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                memo:
                    type: string
        api.user.service.v1.GetUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
        api.user.service.v1.Group:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                type:
                    type: integer
                    format: int32
                name:
                    type: string
                icon:
                    type: string
                memo:
                    type: string
        api.user.service.v1.JoinGroupReply:
            type: object
            properties:
                group:
                    $ref: '#/components/schemas/api.user.service.v1.Group'
        api.user.service.v1.JoinGroupRequest:
            type: object
            properties:
                name:
                    type: string
        api.user.service.v1.ListFriendReply:
            type: object
            properties:
                friends:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.Friend'
        api.user.service.v1.ListFriendRequest:
            type: object
            properties: {}
        api.user.service.v1.ListGroupReply:
            type: object
            properties:
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.Group'
        api.user.service.v1.ListGroupRequest:
            type: object
            properties: {}
        api.user.service.v1.ListUserByGroupReply:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ListUserByGroupReply_User'
        api.user.service.v1.ListUserByGroupReply_User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                phone:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                memo:
                    type: string
        api.user.service.v1.ListUserByGroupRequest:
            type: object
            properties:
                groupId:
                    type: integer
                    format: int64
        api.user.service.v1.ListUserReply:
            type: object
            properties: {}
        api.user.service.v1.ListUserRequest:
            type: object
            properties: {}
        api.user.service.v1.LoginUserReply:
            type: object
            properties:
                token:
                    type: string
                expiredTime:
                    type: integer
                    format: int64
                id:
                    type: integer
                    format: int64
                phone:
                    type: string
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                memo:
                    type: string
        api.user.service.v1.LoginUserRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        api.user.service.v1.UpdateUserReply:
            type: object
            properties: {}
        api.user.service.v1.UpdateUserRequest:
            type: object
            properties: {}
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Im
    - name: User
