// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GroupChatMessagesColumns holds the columns for the "group_chat_messages" table.
	GroupChatMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "message_id", Type: field.TypeInt64, Unique: true},
		{Name: "from", Type: field.TypeInt},
		{Name: "group_id", Type: field.TypeInt},
		{Name: "message", Type: field.TypeString, Size: 2147483647},
	}
	// GroupChatMessagesTable holds the schema information for the "group_chat_messages" table.
	GroupChatMessagesTable = &schema.Table{
		Name:       "group_chat_messages",
		Columns:    GroupChatMessagesColumns,
		PrimaryKey: []*schema.Column{GroupChatMessagesColumns[0]},
	}
	// PersonalChatMessagesColumns holds the columns for the "personal_chat_messages" table.
	PersonalChatMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "message_id", Type: field.TypeInt64, Unique: true},
		{Name: "from", Type: field.TypeInt},
		{Name: "sender", Type: field.TypeInt},
		{Name: "message", Type: field.TypeString, Size: 2147483647},
	}
	// PersonalChatMessagesTable holds the schema information for the "personal_chat_messages" table.
	PersonalChatMessagesTable = &schema.Table{
		Name:       "personal_chat_messages",
		Columns:    PersonalChatMessagesColumns,
		PrimaryKey: []*schema.Column{PersonalChatMessagesColumns[0]},
	}
	// SynchronizeRecordsColumns holds the columns for the "synchronize_records" table.
	SynchronizeRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "device_id", Type: field.TypeUUID},
		{Name: "last_message_id", Type: field.TypeInt64},
	}
	// SynchronizeRecordsTable holds the schema information for the "synchronize_records" table.
	SynchronizeRecordsTable = &schema.Table{
		Name:       "synchronize_records",
		Columns:    SynchronizeRecordsColumns,
		PrimaryKey: []*schema.Column{SynchronizeRecordsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "synchronizerecord_user_id_device_id",
				Unique:  true,
				Columns: []*schema.Column{SynchronizeRecordsColumns[3], SynchronizeRecordsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GroupChatMessagesTable,
		PersonalChatMessagesTable,
		SynchronizeRecordsTable,
	}
)

func init() {
}
