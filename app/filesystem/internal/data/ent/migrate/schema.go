// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// QuotesColumns holds the columns for the "quotes" table.
	QuotesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "storage_quotes", Type: field.TypeInt, Nullable: true},
	}
	// QuotesTable holds the schema information for the "quotes" table.
	QuotesTable = &schema.Table{
		Name:       "quotes",
		Columns:    QuotesColumns,
		PrimaryKey: []*schema.Column{QuotesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "quotes_storages_quotes",
				Columns:    []*schema.Column{QuotesColumns[5]},
				RefColumns: []*schema.Column{StoragesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StoragesColumns holds the columns for the "storages" table.
	StoragesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "type", Type: field.TypeInt32},
		{Name: "path", Type: field.TypeString},
		{Name: "md5", Type: field.TypeString, Unique: true},
	}
	// StoragesTable holds the schema information for the "storages" table.
	StoragesTable = &schema.Table{
		Name:       "storages",
		Columns:    StoragesColumns,
		PrimaryKey: []*schema.Column{StoragesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		QuotesTable,
		StoragesTable,
	}
)

func init() {
	QuotesTable.ForeignKeys[0].RefTable = StoragesTable
}
